/*
 * Confluent Schema Registry
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schemaregistry

import (
	"encoding/json"
)

// CompatibilityCheckResponse struct for CompatibilityCheckResponse
type CompatibilityCheckResponse struct {
	IsCompatible *bool `json:"is_compatible,omitempty"`
	Messages *[]string `json:"messages,omitempty"`
}

// NewCompatibilityCheckResponse instantiates a new CompatibilityCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompatibilityCheckResponse() *CompatibilityCheckResponse {
	this := CompatibilityCheckResponse{}
	return &this
}

// NewCompatibilityCheckResponseWithDefaults instantiates a new CompatibilityCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompatibilityCheckResponseWithDefaults() *CompatibilityCheckResponse {
	this := CompatibilityCheckResponse{}
	return &this
}

// GetIsCompatible returns the IsCompatible field value if set, zero value otherwise.
func (o *CompatibilityCheckResponse) GetIsCompatible() bool {
	if o == nil || o.IsCompatible == nil {
		var ret bool
		return ret
	}
	return *o.IsCompatible
}

// GetIsCompatibleOk returns a tuple with the IsCompatible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompatibilityCheckResponse) GetIsCompatibleOk() (*bool, bool) {
	if o == nil || o.IsCompatible == nil {
		return nil, false
	}
	return o.IsCompatible, true
}

// HasIsCompatible returns a boolean if a field has been set.
func (o *CompatibilityCheckResponse) HasIsCompatible() bool {
	if o != nil && o.IsCompatible != nil {
		return true
	}

	return false
}

// SetIsCompatible gets a reference to the given bool and assigns it to the IsCompatible field.
func (o *CompatibilityCheckResponse) SetIsCompatible(v bool) {
	o.IsCompatible = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *CompatibilityCheckResponse) GetMessages() []string {
	if o == nil || o.Messages == nil {
		var ret []string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompatibilityCheckResponse) GetMessagesOk() (*[]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *CompatibilityCheckResponse) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *CompatibilityCheckResponse) SetMessages(v []string) {
	o.Messages = &v
}

func (o CompatibilityCheckResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsCompatible != nil {
		toSerialize["is_compatible"] = o.IsCompatible
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableCompatibilityCheckResponse struct {
	value *CompatibilityCheckResponse
	isSet bool
}

func (v NullableCompatibilityCheckResponse) Get() *CompatibilityCheckResponse {
	return v.value
}

func (v *NullableCompatibilityCheckResponse) Set(val *CompatibilityCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCompatibilityCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCompatibilityCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompatibilityCheckResponse(val *CompatibilityCheckResponse) *NullableCompatibilityCheckResponse {
	return &NullableCompatibilityCheckResponse{value: val, isSet: true}
}

func (v NullableCompatibilityCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompatibilityCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


